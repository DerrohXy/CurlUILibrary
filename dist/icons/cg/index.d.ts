import { CurlUIElementProps } from "curlui/dist/types";
export declare function CgAbstract(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAddR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAdidas(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAirplane(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlarm(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlbum(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlignBottom(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlignCenter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlignLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlignMiddle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlignRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAlignTop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAnchor(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAppleWatch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrangeBack(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrangeFront(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowAlignH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowAlignV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowBottomLeftO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowBottomLeftR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowBottomLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowBottomRightO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowBottomRightR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowBottomRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowDownO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowDownR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLeftO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLeftR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongDownC(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongDownE(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongDownL(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongDownR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongLeftC(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongLeftE(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongLeftL(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongLeftR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongRightC(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongRightE(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongRightL(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongRightR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongUpC(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongUpE(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongUpL(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongUpR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowLongUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowRightO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowRightR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowTopLeftO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowTopLeftR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowTopLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowTopRightO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowTopRightR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowTopRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowUpO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowUpR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsBreakeH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsBreakeV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExchangeAltV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExchangeAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExchangeV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExchange(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandDownLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandDownRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandLeftAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandRightAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandUpLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsExpandUpRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsHAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsMergeAltH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsMergeAltV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsScrollH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsScrollV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsShrinkH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsShrinkV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsVAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgArrowsV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAssign(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAsterisk(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAtlasian(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAttachment(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAttribution(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgAwards(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBackspace(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBandAid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBatteryEmpty(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBatteryFull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBattery(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBee(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBell(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBitbucket(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBlock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBmw(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBoard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBolt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBookmark(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderBottom(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderStyleDashed(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderStyleDotted(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderStyleSolid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBorderTop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBowl(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBox(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBoy(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBrackets(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBriefcase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBrowse(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBrowser(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBrush(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgBulb(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCPlusPlus(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalculator(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalendarDates(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalendarDue(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalendarNext(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalendarToday(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalendarTwo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalendar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCalibrate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCamera(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCaptions(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCardClubs(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCardDiamonds(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCardHearts(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCardSpades(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCarousel(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCast(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChanel(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCheckO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCheckR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCheck(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleDownO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleDownR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleLeftO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleLeftR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleRightO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleRightR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleUpO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleUpR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDoubleUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDownO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDownR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronLeftO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronLeftR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronRightO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronRightR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronUpO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronUpR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgChevronUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCircleci(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgClapperBoard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgClipboard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCloseO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCloseR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgClose(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCloud(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCodeClimate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCodeSlash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCode(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCoffee(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCollage(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgColorBucket(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgColorPicker(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgComedyCentral(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgComment(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCommunity(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgComponents(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCompressLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCompressRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCompressV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCompress(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgController(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCopy(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCopyright(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleDownLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleDownRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleLeftDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleLeftUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleRightDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleRightUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleUpLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDoubleUpRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDownLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerDownRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerLeftDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerLeftUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerRightDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerRightUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerUpLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCornerUpRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCreditCard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCrop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCross(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCrowdfire(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgCrown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDanger(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDarkMode(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgData(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDatabase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDebug(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDesignmodo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDesktop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDetailsLess(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDetailsMore(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDialpad(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDice1(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDice2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDice3(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDice4(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDice5(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDice6(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDigitalocean(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDisc(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDisplayFlex(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDisplayFullwidth(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDisplayGrid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDisplaySpacing(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDistributeHorizontal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDistributeVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDockBottom(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDockLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDockRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDockWindow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDolby(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDollar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDribbble(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDrive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDropInvert(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDropOpacity(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDrop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgDuplicate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditBlackPoint(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditContrast(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditExposure(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditFade(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditFlipH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditFlipV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditHighlight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditMarkup(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditMask(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditNoise(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditShadows(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditStraight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEditUnmask(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEject(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEnter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgErase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEreader(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEricsson(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEthernet(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEuro(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEventbrite(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgExpand(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgExport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgExtensionAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgExtensionAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgExtensionRemove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgExtension(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgExternal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEyeAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgEye(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFacebook(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFeed(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFigma(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFileAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFileDocument(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFileRemove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFilm(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFilters(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFlagAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFlag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFolderAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFolderRemove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFolder(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFontHeight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFontSpacing(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatBold(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatCenter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatColor(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatHeading(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatIndentDecrease(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatIndentIncrease(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatItalic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatJustify(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatLineHeight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatSeparator(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatSlash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatStrike(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatText(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatUnderline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFormatUppercase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgFramer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGames(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGenderFemale(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGenderMale(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGhostCharacter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGhost(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGift(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGirl(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGitBranch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGitCommit(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGitFork(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGitPull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGitter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGlassAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGlass(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGlobeAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGlobe(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGoogleTasks(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGoogle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgGym(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgHashtag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgHeadset(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgHeart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgHello(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgHomeAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgHomeScreen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgHome(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgIcecream(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgIfDesign(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgImage(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgImport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInbox(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgIndieHackers(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInfinity(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInfo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInpicture(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInsertAfterO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInsertAfterR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInsertAfter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInsertBeforeO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInsertBeforeR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInsertBefore(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInsights(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInstagram(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgInternal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgKey(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgKeyboard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgKeyhole(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLaptop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLastpass(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLayoutGridSmall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLayoutGrid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLayoutList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLayoutPin(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLinear(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLink(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgListTree(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLivePhoto(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLoadbarAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLoadbarDoc(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLoadbarSound(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLoadbar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLockUnlock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLogIn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLogOff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLogOut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgLoupe(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMagnet(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMailForward(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMailOpen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMailReply(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMail(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMathDivide(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMathEqual(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMathMinus(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMathPercent(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMathPlus(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMaximizeAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMaximize(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMaze(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMediaLive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMediaPodcast(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuBoxed(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuCake(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuCheese(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuGridO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuGridR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuHotdog(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuLeftAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuMotion(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuOreos(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuRightAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenuRound(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMenu(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMergeHorizontal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMergeVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMicrobit(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMicrosoft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMiniPlayer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMinimizeAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMinimize(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgModem(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMonday(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoon(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoreAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoreO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoreR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoreVerticalAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoreVerticalO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoreVerticalR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoreVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMore(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMouse(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoveDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoveLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoveRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoveTask(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMoveUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMusicNote(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMusicSpeaker(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgMusic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgNametag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgNotes(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgNotifications(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgNpm(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgOculus(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgOpenCollective(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgOptions(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgOrganisation(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgOverflow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPacman(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPassword(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathBack(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathCrop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathDivide(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathExclude(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathFront(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathIntersect(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathOutline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathTrim(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPathUnite(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPatreon(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPaypal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonBottomLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonBottomRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonTopLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonTopRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPentagonUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPerformance(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPexels(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPhone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPhotoscan(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPiano(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPinAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPinBottom(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPinTop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPin(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayBackwards(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayButtonO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayButtonR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayButton(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayForwards(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayListAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayListCheck(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayListRemove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayListSearch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayPauseO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayPauseR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayPause(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayStopO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayStopR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayStop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayTrackNextO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayTrackNextR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayTrackNext(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayTrackPrevO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayTrackPrevR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlayTrackPrev(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPlug(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPocket(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPokemon(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPolaroid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPoll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPresentation(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPrinter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgProductHunt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgProfile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPullClear(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronDownO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronDownR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronLeftO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronLeftR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronRightO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronRightR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronUpO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronUpR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushChevronUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgPushUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgQr(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgQuoteO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgQuote(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRadioCheck(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRadioChecked(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRatio(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRead(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgReadme(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRecord(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRedo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRemote(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRemoveR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRemove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRename(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgReorder(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRepeat(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRing(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRowFirst(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRowLast(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgRuler(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSandClock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgScan(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgScreenMirror(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgScreenShot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgScreenWide(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgScreen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgScrollH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgScrollV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSearchFound(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSearchLoading(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSearch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSelectO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSelectR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSelect(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgServer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgServerless(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShapeCircle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShapeHalfCircle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShapeHexagon(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShapeRhombus(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShapeSquare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShapeTriangle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShapeZigzag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShield(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShoppingBag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShoppingCart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShortcut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgShutterstock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSidebarOpen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSidebarRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSidebar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSignal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSize(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSketch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSlack(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSleep(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartHomeBoiler(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartHomeCooker(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartHomeHeat(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartHomeLight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartHomeRefrigerator(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartHomeWashMachine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartphoneChip(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartphoneRam(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartphoneShake(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmartphone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmileMouthOpen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmileNeutral(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmileNoMouth(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmileNone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmileSad(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmileUpside(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSmile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSoftwareDownload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSoftwareUpload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSortAz(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSortZa(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSpaceBetweenV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSpaceBetween(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSpectrum(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSpinnerAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSpinnerTwoAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSpinnerTwo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSpinner(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSquare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgStack(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgStark(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgStopwatch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgStories(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgStudio(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgStyle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSun(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSupport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSwapVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSwap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSweden(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSwiss(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgSync(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTab(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTally(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTapDouble(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTapSingle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTemplate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTennis(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTerminal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTerrain(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgThermometer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgThermostat(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTikcode(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTime(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTimelapse(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTimer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToday(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToggleOff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToggleOn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToggleSquareOff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToggleSquare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToolbarBottom(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToolbarLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToolbarRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToolbarTop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgToolbox(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTouchpad(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrack(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTranscript(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrashEmpty(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTree(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrees(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrello(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrendingDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrending(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTrophy(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTv(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTwilio(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgTwitter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUiKit(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUmbrella(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUnavailable(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUnblock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUndo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUnfold(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUnsplash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUsbC(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUsb(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUserAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUserList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUserRemove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUser(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgUserlane(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgVercel(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgViewCols(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgViewComfortable(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgViewDay(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgViewGrid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgViewList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgViewMonth(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgViewSplit(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgVinyl(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgVoicemailO(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgVoicemailR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgVoicemail(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgVolume(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgWebcam(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgWebsite(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgWindows(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgWorkAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgYinyang(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgYoutube(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgZoomIn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function CgZoomOut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
