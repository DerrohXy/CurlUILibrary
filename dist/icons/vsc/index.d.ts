import { CurlUIElementProps } from "curlui/dist/types";
export declare function VscAccount(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscActivateBreakpoints(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArchive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowBoth(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowCircleDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowCircleLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowCircleRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowCircleUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowSmallDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowSmallLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowSmallRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowSmallUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowSwap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscArrowUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscAzureDevops(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscAzure(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBeakerStop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBeaker(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBellDot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBellSlashDot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBellSlash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBell(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBlank(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBold(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBook(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBookmark(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBracketDot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBracketError(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBriefcase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBroadcast(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBrowser(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscBug(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCalendar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCallIncoming(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCallOutgoing(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCaseSensitive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCheckAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCheck(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChecklist(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChevronDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChevronLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChevronRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChevronUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChip(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChromeClose(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChromeMaximize(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChromeMinimize(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscChromeRestore(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircleFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircleLargeFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircleLarge(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircleSlash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircleSmallFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircleSmall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCircuitBoard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscClearAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscClippy(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCloseAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscClose(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCloudDownload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCloudUpload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCloud(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCode(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCoffee(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCollapseAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscColorMode(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCombine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCommentDiscussion(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCommentDraft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCommentUnresolved(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscComment(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCompassActive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCompassDot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCompass(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCopilot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCopy(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscCreditCard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDashboard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDatabase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugAltSmall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointConditionalUnverified(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointConditional(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointDataUnverified(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointData(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointFunctionUnverified(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointFunction(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointLogUnverified(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointLog(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugBreakpointUnsupported(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugConsole(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugContinueSmall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugContinue(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugCoverage(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugDisconnect(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugLineByLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugPause(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugRerun(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugRestartFrame(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugRestart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugReverseContinue(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStackframeActive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStackframe(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStepBack(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStepInto(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStepOut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStepOver(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebugStop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDebug(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDesktopDownload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDeviceCameraVideo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDeviceCamera(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDeviceMobile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDiffAdded(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDiffIgnored(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDiffModified(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDiffRemoved(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDiffRenamed(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDiff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscDiscard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscEdit(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscEditorLayout(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscEllipsis(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscEmptyWindow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscErrorSmall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscError(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscExclude(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscExpandAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscExport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscExtensions(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscEyeClosed(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscEye(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFeedback(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFileBinary(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFileCode(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFileMedia(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFilePdf(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFileSubmodule(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFileSymlinkDirectory(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFileSymlinkFile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFileZip(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFiles(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFilterFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFilter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFlame(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFoldDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFoldUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFold(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFolderActive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFolderLibrary(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFolderOpened(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscFolder(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGame(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGear(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGift(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGistSecret(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGist(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitCommit(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitCompare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitFetch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitMerge(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitPullRequestClosed(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitPullRequestCreate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitPullRequestDraft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitPullRequestGoToChanges(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitPullRequestNewChanges(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGitPullRequest(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGithubAction(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGithubAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGithubInverted(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGithub(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGlobe(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGoToFile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGrabber(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGraphLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGraphLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGraphScatter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGraph(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGripper(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscGroupByRefType(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscHeartFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscHeart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscHistory(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscHome(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscHorizontalRule(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscHubot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscInbox(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscIndent(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscInfo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscInsert(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscInspect(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscIssueDraft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscIssueReopened(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscIssues(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscItalic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscJersey(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscJson(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscKebabVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscKey(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLaw(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayersActive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayersDot(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayers(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutActivitybarLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutActivitybarRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutCentered(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutMenubar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutPanelCenter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutPanelJustify(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutPanelLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutPanelOff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutPanelRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutPanel(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutSidebarLeftOff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutSidebarLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutSidebarRightOff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutSidebarRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayoutStatusbar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLayout(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLibrary(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLightbulbAutofix(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLightbulb(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLinkExternal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLink(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscListFilter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscListFlat(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscListOrdered(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscListSelection(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscListTree(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscListUnordered(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLiveShare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLoading(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLocation(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLockSmall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscLock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMagnet(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMailRead(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMail(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMapFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMarkdown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMegaphone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMention(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMenu(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMerge(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMicFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMilestone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMirror(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMortarBoard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMultipleWindows(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMusic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscMute(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscNewFile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscNewFolder(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscNewline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscNoNewline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscNote(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscNotebookTemplate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscNotebook(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscOctoface(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscOpenPreview(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscOrganization(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscOutput(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPackage(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPaintcan(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPassFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPass(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPersonAdd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPerson(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPiano(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPieChart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPin(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPinnedDirty(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPinned(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPlayCircle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPlay(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPlug(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPreserveCase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPreview(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPrimitiveSquare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscProject(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscPulse(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscQuestion(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscQuote(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRadioTower(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscReactions(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRecordKeys(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRecordSmall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRecord(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRedo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscReferences(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRefresh(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRegex(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRemoteExplorer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRemote(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRemove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscReplaceAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscReplace(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscReply(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRepoClone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRepoForcePush(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRepoForked(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRepoPull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRepoPush(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRepo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscReport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRequestChanges(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRocket(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRootFolderOpened(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRootFolder(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRss(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRuby(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRunAbove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRunAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRunBelow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscRunErrors(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSaveAll(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSaveAs(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSave(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscScreenFull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscScreenNormal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSearchFuzzy(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSearchStop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSearch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSend(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscServerEnvironment(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscServerProcess(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscServer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSettingsGear(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSettings(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscShield(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSignIn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSignOut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSmiley(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSnake(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSortPrecedence(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSourceControl(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSparkle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSplitHorizontal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSplitVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSquirrel(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscStarEmpty(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscStarFull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscStarHalf(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscStopCircle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolArray(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolBoolean(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolClass(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolColor(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolConstant(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolEnumMember(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolEnum(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolEvent(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolField(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolFile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolInterface(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolKey(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolKeyword(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolMethod(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolMisc(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolNamespace(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolNumeric(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolOperator(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolParameter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolProperty(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolRuler(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolSnippet(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolString(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolStructure(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSymbolVariable(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSyncIgnored(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscSync(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTable(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTarget(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTasklist(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTelescope(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminalBash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminalCmd(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminalDebian(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminalLinux(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminalPowershell(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminalTmux(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminalUbuntu(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTerminal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTextSize(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscThreeBars(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscThumbsdownFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscThumbsdown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscThumbsupFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscThumbsup(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTools(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTrash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTriangleDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTriangleLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTriangleRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTriangleUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTwitter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTypeHierarchySub(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTypeHierarchySuper(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscTypeHierarchy(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscUnfold(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscUngroupByRefType(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscUnlock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscUnmute(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscUnverified(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVariableGroup(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVerifiedFilled(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVerified(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVersions(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVmActive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVmConnect(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVmOutline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVmRunning(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVm(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscVr(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWand(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWarning(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWatch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWhitespace(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWholeWord(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWindow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWordWrap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWorkspaceTrusted(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWorkspaceUnknown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscWorkspaceUntrusted(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscZoomIn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function VscZoomOut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
