import { CurlUIElementProps } from "curlui/dist/types";
export declare function TfiAgenda(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAlarmClock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAlert(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAlignCenter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAlignJustify(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAlignLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAlignRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAnchor(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAndroid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleDoubleDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleDoubleLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleDoubleRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleDoubleUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAngleUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiAnnouncement(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiApple(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArchive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowCircleDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowCircleLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowCircleRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowCircleUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowTopLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowTopRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowsCorner(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowsHorizontal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiArrowsVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBackLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBackRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBarChartAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBarChart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBasketball(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBell(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBlackboard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBoltAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBolt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBook(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBookmarkAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBookmark(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBriefcase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBrushAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiBrush(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCalendar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCamera(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCheckBox(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCheck(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiClip(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiClipboard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiClose(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCloudDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCloudUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCloud(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCommentAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiComment(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCommentsSmiley(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiComments(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlBackward(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlEject(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlForward(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlPause(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlPlay(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlRecord(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlShuffle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlSkipBackward(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlSkipForward(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiControlStop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCreditCard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCrown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCss3(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCup(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiCut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDashboard(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDesktop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDirectionAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDirection(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDownload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDribbble(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDropboxAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDropbox(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiDrupal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiEmail(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiEnvelope(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiEraser(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiExchangeVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiExport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiEye(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFaceSad(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFaceSmile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFacebook(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFiles(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFilter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFlagAlt2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFlagAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFlag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFlickrAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFlickr(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFolder(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiFullscreen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiGallery(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiGame(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiGift(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiGithub(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiGoogle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHandDrag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHandOpen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHandPointDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHandPointLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHandPointRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHandPointUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHandStop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHarddrive(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHarddrives(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHeadphoneAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHeadphone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHeartBroken(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHeart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHelpAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHelp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHome(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHtml5(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiHummer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiIdBadge(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiImage(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiImport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiInfinite(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiInfoAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiInfo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiInkPen(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiInstagram(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiItalic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiJoomla(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiJsfiddle(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiKey(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayersAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayers(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutAccordionList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutAccordionMerged(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutAccordionSeparated(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutColumn2Alt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutColumn2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutColumn3Alt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutColumn3(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutColumn4Alt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutColumn4(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutCtaBtnLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutCtaBtnRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutCtaCenter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutCtaLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutCtaRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutGrid2Alt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutGrid2Thumb(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutGrid2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutGrid3Alt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutGrid3(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutGrid4Alt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutGrid4(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutLineSolid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutListLargeImage(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutListPost(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutListThumbAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutListThumb(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaCenterAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaCenter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaLeftAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaOverlayAlt2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaOverlayAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaOverlay(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaRightAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMediaRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMenuFull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMenuSeparated(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMenuV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutMenu(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutPlaceholder(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutSidebar2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutSidebarLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutSidebarNone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutSidebarRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutSliderAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutSlider(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutTabMin(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutTabV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutTabWindow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutTab(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutWidthDefaultAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutWidthDefault(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayoutWidthFull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLayout(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLightBulb(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLineDashed(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLineDotted(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLineDouble(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLink(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLinkedin(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLinux(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiListOl(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLocationArrow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLocationPin(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiLoop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMagnet(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMapAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMarkerAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMarker(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMedallAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMedall(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMenuAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMenu(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMicrophoneAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMicrophone(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMicrosoftAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMicrosoft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMinus(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMobile(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMoney(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMoreAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMore(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMouseAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMouse(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMusicAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiMusic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiNa(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiNewWindow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiNotepad(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPackage(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPaintBucket(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPaintRoller(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPalette(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPanel(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiParagraph(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPencilAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPencilAlt2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPencil(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPieChart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPinAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPin(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPin2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPinterestAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPinterest(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPlug(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPlus(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPowerOff(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPrinter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiPulse(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiQuoteLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiQuoteRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiReceipt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiReddit(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiReload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiRocket(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiRssAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiRss(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiRulerAlt2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiRulerAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiRulerPencil(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiRuler(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSaveAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSave(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSearch(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiServer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSettings(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShareAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShare(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSharethisAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSharethis(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShield(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShiftLeftAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShiftLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShiftRightAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShiftRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShoppingCartFull(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShoppingCart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiShortcode(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSignal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSkype(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSlice(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSmallcap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSoundcloud(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSplitH(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSplitVAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSplitV(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSpray(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiStackOverflow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiStamp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiStar(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiStatsDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiStatsUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiSupport(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTablet(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTarget(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiText(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiThemifyFaviconAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiThemifyFavicon(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiThemifyLogo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiThought(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiThumbDown(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiThumbUp(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTicket(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTime(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTimer(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTrash(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTrello(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTruck(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTumblrAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTumblr(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTwitterAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiTwitter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiUnderline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiUnlink(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiUnlock(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiUpload(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiUppercase(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiUser(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiVector(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiVideoCamera(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiVideoClapper(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiViewGrid(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiViewListAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiViewList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiVimeoAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiVimeo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiVolume(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWallet(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWand(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWheelchair(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWidgetAlt(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWidget(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWidgetized(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWindow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWordpress(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWorld(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiWrite(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiYahoo(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiYoutube(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiZip(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiZoomIn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function TfiZoomOut(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
