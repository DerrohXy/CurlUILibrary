import { CurlUIElementProps } from "curlui/dist/types";
export declare function RiArrowDownCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDownCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDownDoubleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDownDoubleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDownSFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDownSLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowDropUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowGoBackFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowGoBackLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowGoForwardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowGoForwardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftDoubleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftDoubleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftSFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftSLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowLeftUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightDoubleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightDoubleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightSFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightSLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowRightUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowTurnBackFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowTurnBackLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowTurnForwardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowTurnForwardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpDoubleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpDoubleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpSFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArrowUpSLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractLeftRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractLeftRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractUpDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContractUpDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerDownLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerDownLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerDownRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerDownRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerLeftDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerLeftDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerLeftUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerLeftUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerRightDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerRightDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerRightUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerRightUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpLeftDoubleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpLeftDoubleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpRightDoubleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpRightDoubleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCornerUpRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDragMove2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDragMove2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDragMoveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDragMoveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandLeftRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandLeftRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandUpDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExpandUpDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAncientGateFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAncientGateLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAncientPavilionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAncientPavilionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBankFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBankLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuilding2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuilding2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuilding3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuilding3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuilding4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuilding4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuildingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBuildingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCommunityFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCommunityLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGovernmentFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGovernmentLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome6Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome6Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome7Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome7Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome8Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHome8Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeGearFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeGearLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeHeartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeHeartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeOfficeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeOfficeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeSmile2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeSmile2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeSmileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeSmileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeWifiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHomeWifiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHospitalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHospitalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHotelFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHotelLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSchoolFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSchoolLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStore2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStore2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStore3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStore3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStoreFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStoreLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTentFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTentLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAdvertisementFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAdvertisementLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArchive2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArchive2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArchiveDrawerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArchiveDrawerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArchiveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArchiveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAtFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAtLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAttachmentFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAttachmentLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAwardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAwardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChart2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChart2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartGroupedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartGroupedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartHorizontalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartHorizontalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarChartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookmark2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookmark2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookmark3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookmark3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookmarkFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookmarkLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcase5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcaseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBriefcaseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBubbleChartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBubbleChartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalculatorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalculatorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendar2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendar2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarCheckFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarCheckLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarCloseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarCloseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarEventFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarEventLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarTodoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCalendarTodoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopyleftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopyleftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopyrightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopyrightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsByFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsByLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsNcFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsNcLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsNdFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsNdLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsSaFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsSaLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsZeroFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCreativeCommonsZeroLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCustomerService2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCustomerService2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCustomerServiceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCustomerServiceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDonutChartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDonutChartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlag2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlag2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlagFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlagLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGlobalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGlobalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHonourFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHonourLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInbox2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInbox2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInboxArchiveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInboxArchiveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInboxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInboxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInboxUnarchiveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInboxUnarchiveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLineChartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLineChartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinksFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinksLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailCheckFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailCheckLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailCloseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailCloseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailDownloadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailDownloadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailForbidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailForbidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailLockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailLockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailOpenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailOpenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailSendFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailSendLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailSettingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailSettingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailStarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailStarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailUnreadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailUnreadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailVolumeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMailVolumeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMedal2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMedal2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMedalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMedalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMegaphoneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMegaphoneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassExpiredFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassExpiredLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassPendingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassPendingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassValidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassValidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPieChart2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPieChart2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPieChartBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPieChartBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPieChartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPieChartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPresentationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPresentationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPrinterCloudFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPrinterCloudLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPrinterFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPrinterLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProfileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProfileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProjector2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProjector2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProjectorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProjectorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRecordMailFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRecordMailLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRegisteredFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRegisteredLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplyAllFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplyAllLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSendPlane2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSendPlane2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSendPlaneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSendPlaneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSeoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSeoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiServiceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiServiceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShakeHandsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShakeHandsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshow2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshow2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshow3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshow3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshow4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshow4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlideshowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStackFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStackLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrademarkFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrademarkLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVerifiedBadgeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVerifiedBadgeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindow2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindow2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat1Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat1Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChat4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatCheckFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatCheckLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatDeleteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatDeleteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatDownloadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatDownloadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatFollowUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatFollowUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatForwardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatForwardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatHeartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatHeartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatHistoryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatHistoryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatNewFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatNewLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatPollFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatPollLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatPrivateFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatPrivateLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatQuoteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatQuoteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSettingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSettingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSmile2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSmile2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSmile3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSmile3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSmileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatSmileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatUploadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatUploadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatVoiceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChatVoiceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDiscussFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDiscussLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmojiStickerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmojiStickerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFeedbackFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFeedbackLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessage2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessage2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessage3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessage3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessageFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessageLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuestionAnswerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuestionAnswerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuestionnaireFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuestionnaireLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeakFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeakLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoChatFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoChatLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAnticlockwise2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAnticlockwise2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAnticlockwiseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAnticlockwiseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArtboard2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArtboard2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArtboardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArtboardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBallPenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBallPenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBlurOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBlurOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrush2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrush2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrush3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrush3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrush4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrush4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrushFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrushLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClockwise2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClockwise2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClockwiseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClockwiseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCollageFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCollageLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompasses2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompasses2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompassesFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompassesLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrast2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrast2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrastDrop2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrastDrop2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrastDropFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrastDropLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrastFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContrastLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrop2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrop2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCropFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCropLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrosshair2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrosshair2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrosshairFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrosshairLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDragDropFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDragDropLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDropFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDropLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEdit2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEdit2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEditBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEditBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEditCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEditCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEditFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEditLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEraserFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEraserLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFocus2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFocus2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFocus3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFocus3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFocusFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFocusLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGridFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGridLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHammerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHammerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHexagonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHexagonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInkBottleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInkBottleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInputMethodFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInputMethodLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout6Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayout6Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutBottom2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutBottom2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutBottomFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutBottomLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutColumnFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutColumnLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutGridFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutGridLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutLeft2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutLeft2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutMasonryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutMasonryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutRight2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutRight2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutRowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutRowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutTop2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutTop2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutTopFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLayoutTopLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMagicFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMagicLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMarkPenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMarkPenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMarkupFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMarkupLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOctagonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOctagonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaintBrushFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaintBrushLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaintFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaintLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaletteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaletteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPantoneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPantoneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPenNibFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPenNibLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPencilFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPencilLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPencilRuler2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPencilRuler2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPencilRulerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPencilRulerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPentagonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPentagonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuillPenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuillPenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRectangleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRectangleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRuler2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRuler2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRulerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRulerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScissors2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScissors2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScissorsCutFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScissorsCutLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScissorsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScissorsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScreenshot2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScreenshot2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScreenshotFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScreenshotLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShape2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShape2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShapeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShapeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShapesFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShapesLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSipFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSipLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSliceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSliceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSquareFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSquareLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTableAltFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTableAltLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTableFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTableLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiToolsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiToolsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTriangleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTriangleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBracesFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBracesLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBracketsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBracketsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBug2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBug2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBugFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBugLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeSFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeSLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeSSlashFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeSSlashLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCommandFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCommandLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCss3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCss3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCursorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCursorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitBranchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitBranchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitClosePullRequestFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitClosePullRequestLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitCommitFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitCommitLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitMergeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitMergeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitPullRequestFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitPullRequestLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitRepositoryCommitsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitRepositoryCommitsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitRepositoryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitRepositoryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitRepositoryPrivateFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitRepositoryPrivateLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHtml5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHtml5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiJavascriptFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiJavascriptLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParenthesesFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParenthesesLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTerminalBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTerminalBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTerminalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTerminalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTerminalWindowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTerminalWindowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAirplayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAirplayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarcodeBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarcodeBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarcodeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarcodeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBaseStationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBaseStationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBattery2ChargeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBattery2ChargeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBattery2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBattery2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryChargeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryChargeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryLowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryLowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatterySaverFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatterySaverLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryShareFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBatteryShareLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBluetoothConnectFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBluetoothConnectLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBluetoothFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBluetoothLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCastFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCastLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCellphoneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCellphoneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiComputerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiComputerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCpuFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCpuLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDashboard2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDashboard2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDashboard3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDashboard3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDatabase2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDatabase2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDatabaseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDatabaseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeviceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeviceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeviceRecoverFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeviceRecoverLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDualSim1Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDualSim1Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDualSim2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDualSim2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFingerprint2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFingerprint2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFingerprintFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFingerprintLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGamepadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGamepadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGpsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGpsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGradienterFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGradienterLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHardDrive2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHardDrive2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHardDrive3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHardDrive3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHardDriveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHardDriveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHotspotFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHotspotLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInstallFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInstallLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInstanceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInstanceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeyboardBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeyboardBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeyboardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeyboardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMacFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMacLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMacbookFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMacbookLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMouseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMouseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneFindFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneFindLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneLockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneLockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQrCodeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQrCodeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQrScan2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQrScan2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQrScanFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQrScanLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRemoteControl2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRemoteControl2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRemoteControlFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRemoteControlLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRfidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRfidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRotateLockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRotateLockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRouterFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRouterLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRssFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRssLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSave2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSave2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSave3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSave3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSaveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSaveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScan2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScan2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScanFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScanLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSdCardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSdCardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSdCardMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSdCardMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSensorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSensorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiServerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiServerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShutDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShutDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifi1Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifi1Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifi2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifi2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifi3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifi3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifiErrorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifiErrorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifiOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalWifiOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSimCard2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSimCard2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSimCardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSimCardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSmartphoneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSmartphoneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTabletFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTabletLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTv2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTv2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTvFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTvLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUDiskFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUDiskLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUninstallFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUninstallLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUsbFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUsbLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWifiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWifiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWifiOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWifiOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWirelessChargingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWirelessChargingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArticleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiArticleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBillFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBillLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBook2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBook2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBook3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBook3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookMarkFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookMarkLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookOpenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookOpenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookReadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookReadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookletFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBookletLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClipboardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClipboardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsBook2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsBook2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsBookFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsBookLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsBookUploadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsBookUploadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDraftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDraftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFile2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFile2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFile3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFile3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFile4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFile4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileChart2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileChart2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileChartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileChartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCloseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCloseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCloudFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCloudLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCodeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCodeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCopy2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCopy2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCopyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileCopyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileDamageFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileDamageLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileDownloadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileDownloadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileEditFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileEditLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileExcel2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileExcel2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileExcelFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileExcelLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileForbidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileForbidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileGifFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileGifLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileHistoryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileHistoryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileHwpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileHwpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileImageFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileImageLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileInfoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileInfoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileList2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileList2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileList3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileList3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileListFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileListLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileLockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileLockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileMarkFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileMarkLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileMusicFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileMusicLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePaper2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePaper2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePaperFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePaperLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePdf2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePdf2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePdfFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePdfLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePpt2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePpt2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePptFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilePptLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileReduceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileReduceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileSearchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileSearchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileSettingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileSettingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileShield2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileShield2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileShieldFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileShieldLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileShredFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileShredLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileTextFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileTextLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileTransferFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileTransferLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileUnknowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileUnknowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileUploadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileUploadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileUserFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileUserLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileVideoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileVideoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileWarningFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileWarningLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileWord2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileWord2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileWordFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileWordLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileZipFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFileZipLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolder5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderChart2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderChart2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderChartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderChartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderDownloadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderDownloadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderForbidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderForbidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderHistoryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderHistoryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderImageFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderImageLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderInfoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderInfoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderKeyholeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderKeyholeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderLockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderLockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderMusicFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderMusicLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderOpenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderOpenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderReceivedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderReceivedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderReduceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderReduceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderSettingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderSettingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderSharedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderSharedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderShield2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderShield2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderShieldFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderShieldLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderTransferFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderTransferLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderUnknowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderUnknowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderUploadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderUploadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderUserFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderUserLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderVideoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderVideoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderWarningFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderWarningLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderZipFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFolderZipLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFoldersFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFoldersLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeynoteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeynoteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMarkdownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMarkdownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNewspaperFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNewspaperLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumbersFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumbersLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPagesFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPagesLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStickyNote2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStickyNote2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStickyNoteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStickyNoteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSurveyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSurveyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaskFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaskLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTodoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTodoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAB(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAiGenerate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlignBottom(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlignCenter(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlignJustify(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlignLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlignRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlignTop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlignVertically(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAsterisk(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAttachment2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBold(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBringForward(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBringToFront(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodeView(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteColumn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteRow(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoubleQuotesL(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoubleQuotesR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDraggable(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDropdownList(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmphasisCn(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmphasis(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEnglishInput(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlowChart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFontColor(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFontFamily(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFontMono(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFontSansSerif(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFontSans(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFontSize2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFontSize(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFormatClear(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFunctions(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiH1(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiH2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiH3(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiH4(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiH5(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiH6(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHashtag(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeading(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIndentDecrease(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIndentIncrease(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInputCursorMove(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInsertColumnLeft(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInsertColumnRight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInsertRowBottom(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInsertRowTop(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiItalic(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLineHeight(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinkM(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinkUnlinkM(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinkUnlink(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLink(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListCheck2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListCheck3(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListCheck(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListIndefinite(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListOrdered2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListOrdered(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListRadio(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListUnordered(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMergeCellsHorizontal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMergeCellsVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMindMap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNodeTree(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber0(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber1(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber3(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber4(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber5(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber6(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber7(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber8(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNumber9(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOmega(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOrganizationChart(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOverline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPageSeparator(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParagraph(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPinyinInput(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuestionMark(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuoteText(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRoundedCorner(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSendBackward(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSendToBack(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSeparator(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSingleQuotesL(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSingleQuotesR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSketching(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlashCommands2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlashCommands(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSortAsc(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSortDesc(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpace(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSplitCellsHorizontal(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSplitCellsVertical(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStrikethrough2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStrikethrough(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubscript2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubscript(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuperscript2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuperscript(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTable2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTextDirectionL(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTextDirectionR(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTextSpacing(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTextWrap(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiText(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTranslate2(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTranslate(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUnderline(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWubiInput(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function Ri24HoursFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function Ri24HoursLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAuctionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAuctionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBankCard2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBankCard2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBankCardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBankCardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBitCoinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBitCoinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCashFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCashLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoinsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoinsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopperCoinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopperCoinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopperDiamondFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopperDiamondLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoupon5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCouponFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCouponLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCurrencyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCurrencyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeCnyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeCnyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeDollarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeDollarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeFundsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeFundsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExchangeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFundsBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFundsBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFundsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFundsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGift2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGift2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGiftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGiftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandCoinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandCoinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandHeartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandHeartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIncreaseDecreaseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIncreaseDecreaseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyCnyBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyCnyBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyCnyCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyCnyCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyDollarBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyDollarBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyDollarCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyDollarCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyEuroBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyEuroBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyEuroCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyEuroCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyPoundBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyPoundBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyPoundCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoneyPoundCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiP2PFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiP2PLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPercentFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPercentLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPriceTag2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPriceTag2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPriceTag3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPriceTag3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPriceTagFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPriceTagLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRedPacketFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRedPacketLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRefund2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRefund2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRefundFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRefundLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSafe2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSafe2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSafeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSafeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSecurePaymentFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSecurePaymentLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBag2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBag2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBag3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBag3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBagFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBagLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBasket2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBasket2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBasketFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingBasketLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingCart2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingCart2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingCartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShoppingCartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwapBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwapBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwapFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwapLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTicket2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTicket2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTicketFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTicketLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTokenSwapFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTokenSwapLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrophyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrophyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipCrown2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipCrown2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipCrownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipCrownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipDiamondFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipDiamondLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVipLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWallet2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWallet2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWallet3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWallet3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWalletFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWalletLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWaterFlashFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWaterFlashLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrainFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBrainLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCapsuleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCapsuleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDislikeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDislikeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDossierFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDossierLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmpathizeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmpathizeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFirstAidKitFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFirstAidKitLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlaskFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlaskLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandSanitizerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandSanitizerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHealthBookFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHealthBookLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeart2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeart2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeart3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeart3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartPulseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartPulseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeartsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInfraredThermometerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInfraredThermometerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLungsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLungsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMedicineBottleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMedicineBottleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMentalHealthFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMentalHealthLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicroscopeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicroscopeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNurseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNurseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPsychotherapyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPsychotherapyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPulseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPulseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestTimeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestTimeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStethoscopeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStethoscopeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSurgicalMaskFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSurgicalMaskLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSyringeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSyringeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTestTubeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTestTubeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThermometerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThermometerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVirusFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVirusLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZzzFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZzzLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlipayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlipayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAmazonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAmazonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAndroidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAndroidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAngularjsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAngularjsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAppStoreFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAppStoreLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAppleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAppleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBaiduFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBaiduLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBehanceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBehanceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBilibiliFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBilibiliLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBlenderFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBlenderLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBootstrapFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBootstrapLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCentosFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCentosLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChromeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChromeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodepenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCodepenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopilotFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCopilotLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoreosFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCoreosLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDingdingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDingdingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDiscordFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDiscordLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDisqusFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDisqusLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoubanFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoubanLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDribbbleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDribbbleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDriveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDriveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDropboxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDropboxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEdgeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEdgeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEdgeNewFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEdgeNewLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEvernoteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEvernoteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFacebookBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFacebookBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFacebookCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFacebookCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFacebookFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFacebookLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFinderFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFinderLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFirefoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFirefoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlickrFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlickrLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlutterFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlutterLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGatsbyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGatsbyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGithubFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGithubLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitlabFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGitlabLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGoogleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGoogleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGooglePlayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGooglePlayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHonorOfKingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHonorOfKingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInstagramFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInstagramLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInvisionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInvisionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKakaoTalkFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKakaoTalkLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKickFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKickLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLineFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLineLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinkedinBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinkedinBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinkedinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLinkedinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMastercardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMastercardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMastodonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMastodonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMediumFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMediumLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessengerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMessengerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMetaFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMetaLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicrosoftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicrosoftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicrosoftLoopFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicrosoftLoopLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMiniProgramFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMiniProgramLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNeteaseCloudMusicFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNeteaseCloudMusicLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNetflixFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNetflixLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNpmjsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNpmjsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenSourceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenSourceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenaiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenaiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenbaseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenbaseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOperaFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOperaLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPatreonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPatreonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaypalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPaypalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPinterestFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPinterestLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPixelfedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPixelfedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlaystationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlaystationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProductHuntFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProductHuntLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQqFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQqLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReactjsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReactjsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRedditFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRedditLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRemixiconFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRemixiconLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSafariFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSafariLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkypeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkypeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlackFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlackLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSnapchatFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSnapchatLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSoundcloudFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSoundcloudLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpectrumFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpectrumLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpotifyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpotifyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStackOverflowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStackOverflowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStackshareFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStackshareLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSteamFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSteamLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSupabaseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSupabaseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwitchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwitchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaobaoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaobaoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTelegramFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTelegramLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThreadsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThreadsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTiktokFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTiktokLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrelloFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrelloLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTumblrFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTumblrLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTwitchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTwitchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTwitterFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTwitterLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTwitterXFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTwitterXLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUbuntuFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUbuntuLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUnsplashFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUnsplashLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVimeoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVimeoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVisaFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVisaLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVuejsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVuejsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechat2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechat2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechatChannelsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechatChannelsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechatFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechatLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechatPayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWechatPayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWeiboFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWeiboLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWhatsappFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWhatsappLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindowsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindowsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWordpressFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWordpressLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiXboxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiXboxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiXingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiXingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiYoutubeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiYoutubeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiYuqueFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiYuqueLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZcoolFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZcoolLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZhihuFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZhihuLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAnchorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAnchorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarricadeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBarricadeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBeerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBeerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBikeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBikeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBus2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBus2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBusFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBusLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBusWifiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBusWifiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCarWashingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCarWashingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCaravanFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCaravanLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChargingPile2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChargingPile2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChargingPileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChargingPileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChinaRailwayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiChinaRailwayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompass2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompass2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompass3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompass3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompass4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompass4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompassDiscoverFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompassDiscoverLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompassFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCompassLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCupFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCupLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDirectionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDirectionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEBike2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEBike2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEBikeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEBikeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEarthFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEarthLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlightLandFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlightLandLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlightTakeoffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlightTakeoffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFootprintFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFootprintLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGasStationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGasStationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGlobeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGlobeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGobletFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGobletLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGuideFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGuideLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHotelBedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHotelBedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLifebuoyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLifebuoyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLuggageCartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLuggageCartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLuggageDepositFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLuggageDepositLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMap2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMap2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPin5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinRangeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinRangeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinTimeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinTimeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinUserFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMapPinUserLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMotorbikeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMotorbikeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNavigationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNavigationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOilFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOilLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParkingBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParkingBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParkingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParkingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassportFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPassportLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPinDistanceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPinDistanceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlaneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlaneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlanetFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlanetLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPoliceCarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPoliceCarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPushpin2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPushpin2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPushpinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPushpinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestaurant2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestaurant2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestaurantFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRestaurantLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRidingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRidingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRoadMapFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRoadMapLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRoadsterFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRoadsterLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRocket2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRocket2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRocketFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRocketLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRouteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRouteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRunFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRunLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSailboatFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSailboatLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShip2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShip2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShipFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShipLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalTowerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSignalTowerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpaceShipFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpaceShipLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSteering2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSteering2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSteeringFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSteeringLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubwayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubwayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubwayWifiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubwayWifiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuitcase2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuitcase2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuitcase3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuitcase3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuitcaseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSuitcaseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTakeawayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTakeawayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaxiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaxiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaxiWifiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTaxiWifiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrafficLightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrafficLightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrainFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrainLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrainWifiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTrainWifiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTreasureMapFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTreasureMapLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTruckFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTruckLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUnpinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUnpinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWalkFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWalkLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function Ri4KFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function Ri4KLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlbumFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlbumLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAspectRatioFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAspectRatioLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBroadcastFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBroadcastLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCamera2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCamera2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCamera3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCamera3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraLensFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraLensLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraSwitchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCameraSwitchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClapperboardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClapperboardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClosedCaptioningFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiClosedCaptioningLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDiscFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDiscLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDvFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDvLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDvdFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDvdLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEjectFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEjectLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEqualizerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEqualizerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilmFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilmLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward10Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward10Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward15Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward15Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward30Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward30Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForward5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFullscreenExitFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFullscreenExitLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFullscreenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFullscreenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGalleryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGalleryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGalleryUploadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGalleryUploadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHdFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHdLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeadphoneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeadphoneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHqFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHqLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImage2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImage2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImageAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImageAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImageEditFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImageEditLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImageFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiImageLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLandscapeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLandscapeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLiveFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLiveLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMemoriesFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMemoriesLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMic2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMic2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMicOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMovie2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMovie2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMovieFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMovieLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMusic2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMusic2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMusicFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMusicLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMvFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMvLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotification2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotification2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotification3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotification3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotification4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotification4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotificationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotificationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotificationOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotificationOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOrderPlayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOrderPlayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPauseCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPauseCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPauseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPauseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPauseMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPauseMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneCameraFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPhoneCameraLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPictureInPicture2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPictureInPicture2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPictureInPictureExitFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPictureInPictureExitLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPictureInPictureFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPictureInPictureLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayList2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayList2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayListAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayListAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayListFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayListLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlayMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPolaroid2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPolaroid2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPolaroidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPolaroidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadio2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadio2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadioFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadioLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRecordCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRecordCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRepeat2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRepeat2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRepeatFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRepeatLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRepeatOneFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRepeatOneLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay10Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay10Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay15Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay15Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay30Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay30Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReplay5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRewindFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRewindLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRewindMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRewindMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRhythmFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRhythmLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShuffleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShuffleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipBackFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipBackLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipBackMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipBackMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipForwardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipForwardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipForwardMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkipForwardMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlowDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSlowDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSoundModuleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSoundModuleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeaker2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeaker2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeaker3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeaker3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeakerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeakerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeedMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeedMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeedUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpeedUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStopCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStopCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStopFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStopLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStopMiniFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStopMiniLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSurroundSoundFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSurroundSoundLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTapeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTapeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoDownloadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoDownloadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoUploadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVideoUploadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVidicon2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVidicon2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVidiconFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVidiconLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVoiceprintFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVoiceprintLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeMuteFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeMuteLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeOffVibrateFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeOffVibrateLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeVibrateFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVolumeVibrateLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWebcamFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWebcamLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBasketballFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBasketballLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBellFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBellLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBilliardsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBilliardsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBox1Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBox1Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBox2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBox2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBox3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBox3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBoxingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBoxingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCactusFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCactusLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCake2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCake2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCake3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCake3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCakeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCakeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCandleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCandleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCharacterRecognitionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCharacterRecognitionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrossFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCrossLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorClosedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorClosedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorLockBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorLockBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorLockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorLockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorOpenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDoorOpenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFootballFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFootballLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFridgeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFridgeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGameFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGameLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGraduationCapFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGraduationCapLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandbagFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHandbagLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInfinityFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInfinityLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKey2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKey2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKeyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKnifeBloodFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKnifeBloodLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKnifeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiKnifeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLeafFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLeafLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLightbulbFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLightbulbFlashFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLightbulbFlashLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLightbulbLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOutlet2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOutlet2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOutletFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOutletLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPingPongFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPingPongLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlantFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlantLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlug2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlug2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlugFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiPlugLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRecycleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRecycleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReservedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiReservedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScales2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScales2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScales3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScales3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScalesFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiScalesLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSeedlingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSeedlingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShirtFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShirtLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwordFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSwordLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTShirt2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTShirt2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTShirtAirFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTShirtAirLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTShirtFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTShirtLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTreeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTreeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUmbrellaFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUmbrellaLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVoiceRecognitionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiVoiceRecognitionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWheelchairFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWheelchairLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAddBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAddBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAddCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAddCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlarmFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlarmLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlarmWarningFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlarmWarningLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlertFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAlertLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiApps2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiApps2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAppsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAppsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckDoubleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckDoubleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxBlankCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxBlankCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxBlankFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxBlankLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxIndeterminateFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxIndeterminateLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxMultipleBlankFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxMultipleBlankLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxMultipleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCheckboxMultipleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloseCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloseCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDashboardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDashboardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBack2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBack2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBackFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBackLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin6Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin6Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin7Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBin7Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBinFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDeleteBinLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDivideFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDivideLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownload2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownload2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownloadCloud2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownloadCloud2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownloadCloudFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownloadCloudLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownloadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDownloadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEqualFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEqualLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiErrorWarningFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiErrorWarningLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExternalLinkFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiExternalLinkLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEye2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEye2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEyeCloseFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEyeCloseLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEyeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEyeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEyeOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEyeOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilter2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilter2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilter3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilter3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilterFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilterLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilterOffFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFilterOffLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFindReplaceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFindReplaceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForbid2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForbid2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForbidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiForbidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFunctionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFunctionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHistoryFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHistoryLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHourglass2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHourglass2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHourglassFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHourglassLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIndeterminateCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiIndeterminateCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInformationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiInformationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListSettingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiListSettingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoader5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoaderFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoaderLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLock2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLock2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLockPasswordFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLockPasswordLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLockUnlockFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLockUnlockLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoginBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoginBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoginCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoginCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutBoxRFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutBoxRLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutCircleRFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLogoutCircleRLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoopLeftFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoopLeftLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoopRightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiLoopRightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenu5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuFoldFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuFoldLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuSearchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuSearchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuUnfoldFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenuUnfoldLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMore2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMore2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoreFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoreLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotificationBadgeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiNotificationBadgeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProhibitedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiProhibitedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuestionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiQuestionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadioButtonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRadioButtonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRefreshFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRefreshLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSearch2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSearch2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSearchEyeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSearchEyeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSearchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSearchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings6Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettings6Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSettingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareForward2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareForward2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareForwardBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareForwardBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareForwardFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareForwardLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShareLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldCheckFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldCheckLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldCrossFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldCrossLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldFlashFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldFlashLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldKeyholeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldKeyholeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldStarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldStarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldUserFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShieldUserLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSideBarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSideBarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpam2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpam2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpam3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpam3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpamFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpamLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarHalfFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarHalfLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarHalfSFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarHalfSLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarSFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarSLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubtractFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSubtractLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThumbDownFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThumbDownLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThumbUpFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThumbUpLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimer2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimer2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimerFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimerFlashFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimerFlashLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTimerLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiToggleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiToggleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUpload2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUpload2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUploadCloud2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUploadCloud2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUploadCloudFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUploadCloudLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUploadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUploadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZoomInFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZoomInLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZoomOutFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiZoomOutLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountPinBoxFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountPinBoxLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountPinCircleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAccountPinCircleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAdminFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAdminLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAliensFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiAliensLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBearSmileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBearSmileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBodyScanFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBodyScanLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiContactsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCriminalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCriminalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotion2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotion2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionHappyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionHappyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionLaughFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionLaughLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionNormalFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionNormalLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionSadFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionSadLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionUnhappyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEmotionUnhappyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGenderlessFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGenderlessLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGhost2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGhost2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGhostFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGhostLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGhostSmileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGhostSmileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGroup2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGroup2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGroupFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiGroupLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMickeyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMickeyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenArmFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiOpenArmLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParentFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiParentLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRobot2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRobot2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRobotFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRobotLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkull2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkull2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkullFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSkullLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSpyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarSmileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiStarSmileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTeamFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTeamLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTravestiFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTravestiLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser3Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser3Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser4Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser4Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser5Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser5Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser6Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUser6Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserAddFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserAddLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserFollowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserFollowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserForbidFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserForbidLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserHeartFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserHeartLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserLocationFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserLocationLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserReceived2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserReceived2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserReceivedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserReceivedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSearchFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSearchLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSettingsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSettingsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserShared2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserShared2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSharedFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSharedLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSmileFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserSmileLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserStarFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserStarLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserUnfollowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserUnfollowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserVoiceFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiUserVoiceLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWomenFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWomenLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBlazeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiBlazeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCelsiusFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCelsiusLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudWindyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudWindyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudy2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudy2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiCloudyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDrizzleFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiDrizzleLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEarthquakeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiEarthquakeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFahrenheitFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFahrenheitLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFireFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFireLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlashlightFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFlashlightLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFloodFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFloodLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFoggyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiFoggyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHailFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHailLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHaze2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHaze2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHazeFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHazeLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeavyShowersFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiHeavyShowersLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMeteorFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMeteorLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMistFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMistLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonClearFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonClearLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonCloudyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonCloudyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonFoggyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonFoggyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiMoonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRainbowFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRainbowLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRainyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiRainyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShining2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShining2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShiningFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShiningLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShowersFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiShowersLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSnowyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSnowyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSparkling2Fill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSparkling2Line(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSparklingFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSparklingLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSunCloudyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSunCloudyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSunFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSunFoggyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSunFoggyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiSunLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTempColdFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTempColdLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTempHotFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTempHotLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThunderstormsFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiThunderstormsLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTornadoFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTornadoLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTyphoonFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiTyphoonLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWaterPercentFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWaterPercentLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindyFill(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
export declare function RiWindyLine(props: CurlUIElementProps): import("curlui/dist/types").CurlUIRenderElement;
