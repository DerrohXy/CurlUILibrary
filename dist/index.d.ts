import "./styles.css";
import { CurlUIElementProps, CurlUIChildComponent, CurlUIRenderElement, CurlUIElementStyleProps } from "curlui/dist/types";
type ComponentClasses = {
    HIDDEN: string;
    BUTTON: string;
    ICON_BUTTON: string;
    LABEL: string;
    PARAGRAPH: string;
    ICON: string;
    HEADING: string;
    LINK: string;
    IMAGE_VIEW: string;
    VIDEO_VIEW: string;
    AUDIO_VIEW: string;
    TEXT_INPUT: string;
    NUMBER_INPUT: string;
    WEEK_INPUT: string;
    TIME_INPUT: string;
    MONTH_INPUT: string;
    DATETIME_INPUT: string;
    DATE_INPUT: string;
    TEXT_AREA: string;
    PASSWORD_INPUT: string;
    COLOR_INPUT: string;
    FILE_INPUT: string;
    SELECTION: string;
    OPTION: string;
    SELECTION_VIEW: string;
    SELECTION_VIEW_ACTIVE: string;
    SELECTION_VIEW_DROPDOWN: string;
    OPTION_ITEM: string;
    PROGRESS_BAR: string;
    SLIDER: string;
    PROGRESS_INDICATOR: string;
    CHECK_BUTTON: string;
    CHECK_BUTTON_CHECK_BOX: string;
    CHECK_BUTTON_CHECK_BOX_CHECKED: string;
    RADIO_GROUP: string;
    VERTICAL_RADIO_GROUP: string;
    RADIO_BUTTON: string;
    RADIO_BUTTON_CHECK_BOX: string;
    RADIO_BUTTON_CHECK_BOX_CHECKED: string;
    SWITCH: string;
    SWITCH_ACTIVE: string;
    SWITCH_TOGGLE: string;
    SWITCH_TOGGLE_ACTIVE: string;
    MENU: string;
    MENU_ACTIVE: string;
    MENU_DROPDOWN: string;
    MENU_ITEM: string;
    MENU_BAR: string;
    TABBED_WINDOW: string;
    VERTICAL_TABBED_WINDOW: string;
    TABBED_WINDOW_TITLE_BAR: string;
    VERTICAL_TABBED_WINDOW_TITLE_BAR: string;
    TABBED_WINDOW_TITLE: string;
    TABBED_WINDOW_TITLE_ACTIVE: string;
    TABBED_WINDOW_CONTENT: string;
    TABBED_WINDOW_TITLE_BAR_CENTERED: string;
    TABBED_WINDOW_TITLE_BAR_SPACED: string;
    TABBED_WINDOW_TITLE_BAR_RIGHT: string;
    CANVAS: string;
    COLLAPSE_VIEW: string;
    COLLAPSE_VIEW_TITLE_BAR: string;
    COLLAPSE_VIEW_TITLE_BAR_ACTIVE: string;
    COLLAPSE_VIEW_CONTENT: string;
    ORDERED_LIST: string;
    UNORDERED_LIST: string;
    LIST_ITEM: string;
    TABLE: string;
    TABLE_HEADING: string;
    TABLE_FOOTER: string;
    TABLE_BODY: string;
    TABLE_ROW: string;
    TABLE_DATA: string;
    TABLE_HEADER: string;
    CAPTION: string;
    EMBED: string;
    IFRAME: string;
    VERTICAL_LAYOUT: string;
    HORIZONTAL_LAYOUT: string;
    FLOW_LAYOUT: string;
    GRID_LAYOUT: string;
    RELATIVE_LAYOUT: string;
    SCROLL_WINDOW: string;
    VERTICAL_SCROLL_WINDOW: string;
    HORIZONTAL_SCROLL_WINDOW: string;
    NAVIGATION_BAR: string;
    NAVIGATION_BAR_NAVIGATION_WINDOW: string;
    NAVIGATION_BAR_DRAWER_WINDOW: string;
    NAVIGATION_BAR_MENU_WINDOW: string;
    FOOTER_BAR: string;
    ACTIVITY: string;
    DIALOG: string;
    DIALOG_TITLE: string;
    DIALOG_WINDOW: string;
    DIALOG_TITLE_BAR: string;
    NOTIFICATION: string;
    TOAST: string;
    [key: string]: string;
};
type SelectionViewOptionItem = {
    text?: string;
    content?: CurlUIChildComponent;
};
type SelectionViewProps = CurlUIElementProps & {
    optionItems: Array<SelectionViewOptionItem>;
    onInput?: Function;
    dropdownStyle?: CurlUIElementStyleProps;
    optionItemStyle?: CurlUIElementStyleProps;
};
type SwitchProps = CurlUIElementProps & {
    onActiveChange?: Function;
};
type CheckButtonProps = CurlUIElementProps & {
    onCheckedChange?: Function;
};
type RadioGroupItem = {
    value: any;
    text: CurlUIChildComponent;
};
type RadioGroupProps = CurlUIElementProps & {
    radioItems: Array<RadioGroupItem>;
    vertical?: boolean;
    onCheckedChange?: Function;
    radioButtonStyle?: CurlUIElementStyleProps;
};
type MenuProps = CurlUIElementProps & {
    menuItems: Array<CurlUIRenderElement>;
    title: CurlUIChildComponent;
    dropdownStyle?: CurlUIElementStyleProps;
};
type CollapseViewProps = CurlUIElementProps & {
    content: Array<CurlUIChildComponent> | CurlUIChildComponent;
    title: CurlUIChildComponent;
    titleBarStyle?: CurlUIElementStyleProps;
    contentStyle?: CurlUIElementStyleProps;
    onCollapse?: Function;
    open: boolean;
};
type TabLocation = "left" | "right" | "center";
type TabbedWindowProps = CurlUIElementProps & {
    tabs: Array<TabbedWindowTab>;
    vertical?: boolean;
    titleBarStyle?: CurlUIElementStyleProps;
    contentStyle?: CurlUIElementStyleProps;
    tabsLocation?: TabLocation;
    onTabSelection?: Function;
    currentTabIndex?: number;
};
type TabbedWindowTab = {
    title: CurlUIChildComponent;
    content: CurlUIChildComponent;
};
type NavigationBarProps = CurlUIElementProps & {
    drawerContent?: CurlUIRenderElement;
    menuContent?: CurlUIRenderElement;
    content: Array<CurlUIRenderElement> | CurlUIRenderElement;
    drawerButton?: CurlUIRenderElement;
    menuButton?: CurlUIRenderElement;
    navigationWindowStyle?: CurlUIElementStyleProps;
    drawerWindowStyle?: CurlUIElementStyleProps;
    menuWindowStyle?: CurlUIElementStyleProps;
};
export declare function Initialize(): void;
export declare function Button(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function IconButton(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Label(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Paragraph(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Icon(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Heading1(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Heading2(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Heading3(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Heading4(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Heading5(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Heading6(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Link(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function ImageView(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function VideoView(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function AudioView(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function TextInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function NumberInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function WeekInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function TimeInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function MonthInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function DatetimeInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function DateInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function TextArea(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function PasswordInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function ColorInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function FileInput(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Selection(properties: CurlUIElementProps, ...options: Array<CurlUIRenderElement>): CurlUIRenderElement;
export declare function Option(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function ProgressBar(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function Slider(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function ProgressIndicator(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function MenuBar(properties: CurlUIElementProps, ...menus: Array<CurlUIRenderElement>): CurlUIRenderElement;
export declare function MenuItem(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function Canvas(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function UnorderedList(properties: CurlUIElementProps, ...listItems: Array<CurlUIRenderElement>): CurlUIRenderElement;
export declare function OrderedList(properties: CurlUIElementProps, ...listItems: Array<CurlUIRenderElement>): CurlUIRenderElement;
export declare function ListItem(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function Table(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function TableHeading(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function TableFooter(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function TableBody(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function TableRow(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function TableData(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function TableHeader(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function Caption(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function Embed(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function Iframe(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function VerticalLayout(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function HorizontalLayout(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function FlowLayout(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function GridLayout(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function RelativeLayout(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function ScrollWindow(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function VerticalScrollWindow(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function HorizontalScrollWindow(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function FooterBar(properties: CurlUIElementProps, ...children: Array<CurlUIChildComponent>): CurlUIRenderElement;
export declare function Activity(properties: CurlUIElementProps): CurlUIRenderElement;
export declare function SelectionView(properties: SelectionViewProps): CurlUIRenderElement;
export declare function Switch(properties: SwitchProps): CurlUIRenderElement;
export declare function CheckButton(properties: CheckButtonProps): CurlUIRenderElement;
export declare function RadioGroup(properties: RadioGroupProps): CurlUIRenderElement;
export declare function Menu(properties: MenuProps): CurlUIRenderElement;
export declare function CollapseView(properties: CollapseViewProps): CurlUIRenderElement;
export declare function TabbedWindow(properties: TabbedWindowProps): CurlUIRenderElement;
export declare function NavigationBar(properties: NavigationBarProps): CurlUIRenderElement;
type ApplicationRouter = (title: string) => CurlUIRenderElement | null;
type ApplicationProps = {
    router?: ApplicationRouter;
    baseElement?: HTMLElement;
};
type Application = {
    baseElement: HTMLElement;
    hashUpdateActive: boolean;
    router: ApplicationRouter;
    showActivity: (activity: CurlUIRenderElement, title: string | null) => void;
    openActivity: (title: string) => void;
};
export declare function Application(properties: ApplicationProps): Application;
type ApplicationV2 = {
    baseElement: HTMLElement;
    pathUpdateActive: boolean;
    router: ApplicationRouter;
    showActivity: (activity: CurlUIRenderElement, path: string | null) => void;
    openActivity: (title: string) => void;
};
export declare function ApplicationV2(properties: ApplicationProps): ApplicationV2;
type ShowDialogProps = {
    duration?: number;
    content: Array<CurlUIRenderElement> | CurlUIRenderElement;
    splash?: boolean;
    title?: string;
    closeOnClickOutside?: boolean;
    style?: CurlUIElementStyleProps;
    titleBarStyle?: CurlUIElementStyleProps;
    closeButton?: CurlUIRenderElement;
    icon?: CurlUIRenderElement;
};
export declare function showDialog(properties: ShowDialogProps): string;
export declare function closeDialog(dialogId: string): void;
type ShowNotificationProps = {
    duration?: number;
    content: Array<CurlUIRenderElement> | CurlUIRenderElement;
};
export declare function showNotification(properties: ShowNotificationProps): string;
export declare function closeNotification(notificationId: string): void;
type ShowToastProps = {
    text: string;
    duration?: number;
    style?: CurlUIElementStyleProps;
};
export declare function showToast(properties: ShowToastProps): string | undefined;
export declare function closeToast(toastId: string): void;
export declare function closeDrawers(): void;
export declare function closeDialogs(): void;
export declare function closeNotifications(): void;
export declare function closeToasts(): void;
export declare function isNull(item: any): boolean;
export declare function notNull(item: any): boolean;
export declare function getUniqueId(): string;
export declare function getWindowDimensions(): {
    innerHeight: number;
    innerWidth: number;
    outerHeight: number;
    outerWidth: number;
};
export declare function getElementDimensions(element: HTMLElement): {
    clientWidth: number;
    clientHeight: number;
    offsetWidth: number;
    offsetHeight: number;
    offsetTop: number;
    offsetLeft: number;
};
export declare function getConstants(): {
    Classes: ComponentClasses;
    Colors: {
        ALICE_BLUE: string;
        ANTIQUE_WHITE: string;
        AQUA: string;
        AQUAMARINE: string;
        AZURE: string;
        BEIGE: string;
        BISQUE: string;
        BLACK: string;
        BLACK1: string;
        BLACK2: string;
        BLACK3: string;
        BLACK4: string;
        BLACK5: string;
        BLANCHED_ALMOND: string;
        BLUE: string;
        BLUE1: string;
        BLUE2: string;
        BLUE3: string;
        BLUE4: string;
        BLUE5: string;
        BLUE_GREEN: string;
        BLUE_VIOLET: string;
        BRIGHT_BLUE: string;
        BROWN: string;
        BROWN1: string;
        BROWN2: string;
        BROWN3: string;
        BROWN4: string;
        BROWN5: string;
        BURLY_WOOD: string;
        BURNT_ORANGE: string;
        CADET_BLUE: string;
        CHARCOAL: string;
        CHARTREUSE: string;
        CHERRY_RED: string;
        CHOCOLATE: string;
        CLASSIC_BLUE: string;
        CLASSIC_PINK: string;
        CLASSIC_YELLOW: string;
        CORAL: string;
        CORNFLOWER_BLUE: string;
        CORNSILK: string;
        CRIMSON: string;
        CYAN: string;
        DARK_BLUE: string;
        DARK_CYAN: string;
        DARK_GOLDEN_ROD: string;
        DARK_GRAY: string;
        DARK_GREEN: string;
        DARK_GREY: string;
        DARK_KHAKI: string;
        DARK_MAGENTA: string;
        DARK_OLIVE_GREEN: string;
        DARK_ORANGE: string;
        DARK_ORCHID: string;
        DARK_RED: string;
        DARK_SALMON: string;
        DARK_SAND: string;
        DARK_SEA_GREEN: string;
        DARK_SLATE_BLUE: string;
        DARK_SLATE_GRAY: string;
        DARK_SLATE_GREY: string;
        DARK_TURQUOISE: string;
        DARK_VIOLET: string;
        DEEP_PINK: string;
        DEEP_SKY_BLUE: string;
        DIM_GRAY: string;
        DIM_GREY: string;
        DODGER_BLUE: string;
        DUSTY_WHITE: string;
        ELECTRIC_BLUE: string;
        FIRE_BRICK: string;
        FLORAL_WHITE: string;
        FOREST_GREEN: string;
        FREEZE_PURPLE: string;
        FUCHSIA: string;
        GAINSBORO: string;
        GHOST_WHITE: string;
        GOLD: string;
        GOLDEN_ROD: string;
        GRAY: string;
        GRAY1: string;
        GRAY2: string;
        GRAY3: string;
        GRAY4: string;
        GRAY5: string;
        GREEN: string;
        GREEN1: string;
        GREEN2: string;
        GREEN3: string;
        GREEN4: string;
        GREEN5: string;
        GREEN_YELLOW: string;
        GREY: string;
        HEAVY_PURPLE: string;
        HONEY_DEW: string;
        HOT_PINK: string;
        ICE_COLD: string;
        INDIAN_RED: string;
        INDIGO: string;
        ISLAND_GREEN: string;
        IVORY: string;
        KHAKI: string;
        LAVENDER: string;
        LAVENDER_BLUSH: string;
        LAWN_GREEN: string;
        LEMON_CHIFFON: string;
        LIGHT_BLUE: string;
        LIGHT_CORAL: string;
        LIGHT_CYAN: string;
        LIGHT_GOLDEN_ROD_YELLOW: string;
        LIGHT_GRAY: string;
        LIGHT_GREEN: string;
        LIGHT_GREY: string;
        LIGHT_OLIVE: string;
        LIGHT_PINK: string;
        LIGHT_SALMON: string;
        LIGHT_SEA_GREEN: string;
        LIGHT_SKY_BLUE: string;
        LIGHT_SLATE_GRAY: string;
        LIGHT_SLATE_GREY: string;
        LIGHT_STEEL_BLUE: string;
        LIGHT_TEAL: string;
        LIGHT_YELLOW: string;
        LIME: string;
        LIME_GREEN: string;
        LINEN: string;
        MAGENTA: string;
        MAROON: string;
        MEDIUM_AQUA_MARINE: string;
        MEDIUM_BLUE: string;
        MEDIUM_ORCHID: string;
        MEDIUM_PURPLE: string;
        MEDIUM_SEA_GREEN: string;
        MEDIUM_SLATE_BLUE: string;
        MEDIUM_SPRING_GREEN: string;
        MEDIUM_TURQUOISE: string;
        MEDIUM_VIOLET_RED: string;
        MIDNIGHT_BLUE: string;
        MINT_CREAM: string;
        MISTY_ROSE: string;
        MOCCASIN: string;
        MUSTARD: string;
        NAVAJO_WHITE: string;
        NAVY: string;
        OFF_WHITE: string;
        OLD_LACE: string;
        OLIVE: string;
        OLIVE_DRAB: string;
        ORANGE: string;
        ORANGE1: string;
        ORANGE2: string;
        ORANGE3: string;
        ORANGE4: string;
        ORANGE5: string;
        ORANGE_RED: string;
        ORCHID: string;
        PALE_GOLDEN_ROD: string;
        PALE_GREEN: string;
        PALE_TURQUOISE: string;
        PALE_VIOLET_RED: string;
        PAPAYA_WHIP: string;
        PEACH: string;
        PEACH_PUFF: string;
        PERU: string;
        PINK: string;
        PINK_SAND: string;
        PLUM: string;
        POWDER_BLUE: string;
        PURPLE: string;
        PURPLE1: string;
        PURPLE2: string;
        PURPLE3: string;
        PURPLE4: string;
        PURPLE5: string;
        PURPLE_PAIN: string;
        RASPBERRY: string;
        REBECCA_PURPLE: string;
        RED: string;
        RED1: string;
        RED2: string;
        RED3: string;
        RED4: string;
        RED5: string;
        ROSY_BROWN: string;
        ROYAL_BLUE: string;
        SADDLE_BROWN: string;
        SAGE: string;
        SALMON: string;
        SANDY_BROWN: string;
        SCARLET: string;
        SEA_GREEN: string;
        SEA_SHELL: string;
        SIENNA: string;
        SILVER: string;
        SKY_BLUE: string;
        SLATE_BLUE: string;
        SLATE_GRAY: string;
        SLATE_GREY: string;
        SNOW: string;
        SPICED_APPLE: string;
        SPRING_GREEN: string;
        STEEL_BLUE: string;
        TAN: string;
        TEAL: string;
        THISTLE: string;
        TOMATO: string;
        TURQUOISE: string;
        VERDANT_GREEN: string;
        VIOLET: string;
        WHEAT: string;
        WHITE: string;
        WHITE1: string;
        WHITE2: string;
        WHITE3: string;
        WHITE4: string;
        WHITE5: string;
        WHITE_SMOKE: string;
        YELLOW: string;
        YELLOW1: string;
        YELLOW2: string;
        YELLOW3: string;
        YELLOW4: string;
        YELLOW5: string;
        YELLOW_GREEN: string;
    };
};
export {};
